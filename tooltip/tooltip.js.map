{"version":3,"sources":["../../../src/tooltip/tooltip.ts"],"names":[],"mappings":"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","file":"tooltip.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Injector,\n  Renderer,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core';\nconst Component: NeverTypeCheckMe = Component;  /* local alias for Closure JSDoc */\nconst Directive: NeverTypeCheckMe = Directive;  /* local alias for Closure JSDoc */\nconst Input: NeverTypeCheckMe = Input;  /* local alias for Closure JSDoc */\nconst Output: NeverTypeCheckMe = Output;  /* local alias for Closure JSDoc */\nconst EventEmitter: NeverTypeCheckMe = EventEmitter;  /* local alias for Closure JSDoc */\nconst ChangeDetectionStrategy: NeverTypeCheckMe = ChangeDetectionStrategy;  /* local alias for Closure JSDoc */\nconst OnInit: NeverTypeCheckMe = OnInit;  /* local alias for Closure JSDoc */\nconst OnDestroy: NeverTypeCheckMe = OnDestroy;  /* local alias for Closure JSDoc */\nconst Injector: NeverTypeCheckMe = Injector;  /* local alias for Closure JSDoc */\nconst Renderer: NeverTypeCheckMe = Renderer;  /* local alias for Closure JSDoc */\nconst ComponentRef: NeverTypeCheckMe = ComponentRef;  /* local alias for Closure JSDoc */\nconst ElementRef: NeverTypeCheckMe = ElementRef;  /* local alias for Closure JSDoc */\nconst TemplateRef: NeverTypeCheckMe = TemplateRef;  /* local alias for Closure JSDoc */\nconst ViewContainerRef: NeverTypeCheckMe = ViewContainerRef;  /* local alias for Closure JSDoc */\nconst ComponentFactoryResolver: NeverTypeCheckMe = ComponentFactoryResolver;  /* local alias for Closure JSDoc */\nconst NgZone: NeverTypeCheckMe = NgZone;  /* local alias for Closure JSDoc */\n\nimport {listenToTriggers} from '../util/triggers';\nconst listenToTriggers: NeverTypeCheckMe = listenToTriggers;  /* local alias for Closure JSDoc */\nimport {positionElements} from '../util/positioning';\nconst positionElements: NeverTypeCheckMe = positionElements;  /* local alias for Closure JSDoc */\nimport {PopupService} from '../util/popup';\nconst PopupService: NeverTypeCheckMe = PopupService;  /* local alias for Closure JSDoc */\nimport {NgbTooltipConfig} from './tooltip-config';\nconst NgbTooltipConfig: NeverTypeCheckMe = NgbTooltipConfig;  /* local alias for Closure JSDoc */\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'[class]': '\"tooltip show tooltip-\" + placement', 'role': 'tooltip'},\n  template: `\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n})\nexport class NgbTooltipWindow {\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' = 'top';\n}\n\nfunction NgbTooltipWindow_tsickle_Closure_declarations() {\n/** @type {string} */\nNgbTooltipWindow.prototype.placement;\n}\n\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy {\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n * Emits an event when the tooltip is shown\n */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n  @Output() hidden = new EventEmitter();\nprivate _ngbTooltip: string | TemplateRef<any>;\nprivate _popupService: PopupService<NgbTooltipWindow>;\nprivate _windowRef: ComponentRef<NgbTooltipWindow>;\nprivate _unregisterListenersFn;\nprivate _zoneSubscription: any;\n/**\n * @param {!ElementRef} _elementRef\n * @param {!Renderer} _renderer\n * @param {!Injector} injector\n * @param {!ComponentFactoryResolver} componentFactoryResolver\n * @param {!ViewContainerRef} viewContainerRef\n * @param {!NgbTooltipConfig} config\n * @param {!NgZone} ngZone\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      ngZone: NgZone) {\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n/**\n * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n * @param {(string|!TemplateRef<?>)} value\n * @return {void}\n */\n@Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n/**\n * @return {(string|!TemplateRef<?>)}\n */\nget ngbTooltip() { return this._ngbTooltip; }\n/**\n * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n * The context is an optional value to be injected into the tooltip template when it is created.\n * @param {?=} context\n * @return {void}\n */\nopen(context?: any) {\n    if (!this._windowRef && this._ngbTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.placement = this.placement;\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // we need to manually invoke change detection since events registered via\n      // Renderer::listen() - to be determined if this is a bug in the Angular itself\n      this._windowRef.changeDetectorRef.markForCheck();\n      this.shown.emit();\n    }\n  }\n/**\n * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n * @return {void}\n */\nclose(): void {\n    if (this._windowRef != null) {\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n/**\n * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n * @return {void}\n */\ntoggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n/**\n * Returns whether or not the tooltip is currently being shown\n * @return {boolean}\n */\nisOpen(): boolean { return this._windowRef != null; }\n/**\n * @return {void}\n */\nngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n/**\n * @return {void}\n */\nngOnDestroy() {\n    this.close();\n    this._unregisterListenersFn();\n    this._zoneSubscription.unsubscribe();\n  }\n}\n\nfunction NgbTooltip_tsickle_Closure_declarations() {\n/**\n * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n * @type {string}\n */\nNgbTooltip.prototype.placement;\n/**\n * Specifies events that should trigger. Supports a space separated list of event names.\n * @type {string}\n */\nNgbTooltip.prototype.triggers;\n/**\n * A selector specifying the element the tooltip should be appended to.\n * Currently only supports \"body\".\n * @type {string}\n */\nNgbTooltip.prototype.container;\n/**\n * Emits an event when the tooltip is shown\n * @type {!EventEmitter<?>}\n */\nNgbTooltip.prototype.shown;\n/**\n * Emits an event when the tooltip is hidden\n * @type {!EventEmitter<?>}\n */\nNgbTooltip.prototype.hidden;\n/** @type {(string|!TemplateRef<?>)} */\nNgbTooltip.prototype._ngbTooltip;\n/** @type {!PopupService<!NgbTooltipWindow>} */\nNgbTooltip.prototype._popupService;\n/** @type {!ComponentRef<!NgbTooltipWindow>} */\nNgbTooltip.prototype._windowRef;\n/** @type {?} */\nNgbTooltip.prototype._unregisterListenersFn;\n/** @type {?} */\nNgbTooltip.prototype._zoneSubscription;\n/** @type {!ElementRef} */\nNgbTooltip.prototype._elementRef;\n/** @type {!Renderer} */\nNgbTooltip.prototype._renderer;\n}\n\n"]}