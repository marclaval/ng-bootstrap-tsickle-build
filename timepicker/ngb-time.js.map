{"version":3,"sources":["../../../src/timepicker/ngb-time.ts"],"names":[],"mappings":"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","file":"ngb-time.js","sourceRoot":"","sourcesContent":["import {isNumber, toInteger} from '../util/util';\nconst isNumber: NeverTypeCheckMe = isNumber;  /* local alias for Closure JSDoc */\nconst toInteger: NeverTypeCheckMe = toInteger;  /* local alias for Closure JSDoc */\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n/**\n * @param {number=} hour\n * @param {number=} minute\n * @param {number=} second\n */\nconstructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n/**\n * @param {number=} step\n * @return {void}\n */\nchangeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n/**\n * @param {number} hour\n * @return {void}\n */\nupdateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n/**\n * @param {number=} step\n * @return {void}\n */\nchangeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n/**\n * @param {number} minute\n * @return {void}\n */\nupdateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n/**\n * @param {number=} step\n * @return {void}\n */\nchangeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n/**\n * @param {number} second\n * @return {void}\n */\nupdateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n/**\n * @param {boolean=} checkSecs\n * @return {boolean}\n */\nisValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n/**\n * @return {string}\n */\ntoString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n\nfunction NgbTime_tsickle_Closure_declarations() {\n/** @type {number} */\nNgbTime.prototype.hour;\n/** @type {number} */\nNgbTime.prototype.minute;\n/** @type {number} */\nNgbTime.prototype.second;\n}\n\n"]}