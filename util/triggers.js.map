{"version":3,"file":"triggers.js","sourceRoot":"","sources":["../../../src/util/triggers.ts"],"names":[],"mappings":"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","sourcesContent":["\nexport class Trigger {\n/**\n * @param {?} open\n * @param {?=} close\n */\nconstructor(public open: string,\npublic close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n/**\n * @return {?}\n */\nisManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nfunction Trigger_tsickle_Closure_declarations() {\n/** @type {?} */\nTrigger.prototype.open;\n/** @type {?} */\nTrigger.prototype.close;\n}\n\n\nconst /** @type {?} */ DEFAULT_ALIASES = {\n  hover: ['mouseenter', 'mouseleave']\n};\n/**\n * @param {?} triggers\n * @param {?=} aliases\n * @return {?}\n */\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const /** @type {?} */ trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const /** @type {?} */ parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let /** @type {?} */ alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const /** @type {?} */ manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nconst /** @type {?} */ noopFn = () => {};\n/**\n * @param {?} renderer\n * @param {?} nativeElement\n * @param {?} triggers\n * @param {?} openFn\n * @param {?} closeFn\n * @param {?} toggleFn\n * @return {?}\n */\nexport function listenToTriggers(renderer: any, nativeElement: any, triggers: string, openFn, closeFn, toggleFn) {\n  const /** @type {?} */ parsedTriggers = parseTriggers(triggers);\n  const /** @type {?} */ listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return noopFn;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n    } else {\n      listeners.push(\n          renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n    }\n  });\n\n  return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}