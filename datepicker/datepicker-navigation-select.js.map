{"version":3,"file":"datepicker-navigation-select.js","sourceRoot":"","sources":["../../../src/datepicker/datepicker-navigation-select.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, Output, EventEmitter, OnChanges, SimpleChanges} from '@angular/core/index';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbCalendar} from './ngb-calendar';\nexport class NgbDatepickerNavigationSelect implements OnChanges {\n  months: number[];\n  years: number[] = [];\n\n   date: NgbDate;\n   disabled: boolean;\n   maxDate: NgbDate;\n   minDate: NgbDate;\n\n   select = new EventEmitter<NgbDate>();\n/**\n * @param {?} i18n\n * @param {?} calendar\n */\nconstructor(public i18n: NgbDatepickerI18n,\nprivate calendar: NgbCalendar) { this.months = calendar.getMonths(); }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['maxDate'] || changes['minDate'] || changes['date']) {\n      this._generateYears();\n      this._generateMonths();\n    }\n  }\n/**\n * @param {?} month\n * @return {?}\n */\nchangeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n/**\n * @param {?} year\n * @return {?}\n */\nchangeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n/**\n * @return {?}\n */\nprivate _generateMonths() {\n    this.months = this.calendar.getMonths();\n\n    if (this.date && this.date.year === this.minDate.year) {\n      const /** @type {?} */ index = this.months.findIndex(month => month === this.minDate.month);\n      this.months = this.months.slice(index);\n    }\n\n    if (this.date && this.date.year === this.maxDate.year) {\n      const /** @type {?} */ index = this.months.findIndex(month => month === this.maxDate.month);\n      this.months = this.months.slice(0, index + 1);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _generateYears() {\n    this.years = Array.from({length: this.maxDate.year - this.minDate.year + 1}, (e, i) => this.minDate.year + i);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-datepicker-navigation-select',\n  styles: [`\n    select {\n      /* to align with btn-sm */\n      padding: 0.25rem 0.5rem;\n      font-size: 0.875rem;      \n      line-height: 1.25;\n      /* to cancel the custom height set by custom-select */\n      height: inherit;\n      width: 50%;\n    }\n  `],\n  template: `\n    <select [disabled]=\"disabled\" class=\"custom-select d-inline-block\" [value]=\"date?.month\" (change)=\"changeMonth($event.target.value)\">\n      <option *ngFor=\"let m of months\" [value]=\"m\">{{ i18n.getMonthShortName(m) }}</option>\n    </select>` +\n      `<select [disabled]=\"disabled\" class=\"custom-select d-inline-block\" [value]=\"date?.year\" (change)=\"changeYear($event.target.value)\">\n      <option *ngFor=\"let y of years\" [value]=\"y\">{{ y }}</option>\n    </select> \n  `  // template needs to be formatted in a certain way so we don't add empty text nodes\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDatepickerI18n, },\n{type: NgbCalendar, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'disabled': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'minDate': [{ type: Input },],\n'select': [{ type: Output },],\n};\n}\n\nfunction NgbDatepickerNavigationSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerNavigationSelect.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerNavigationSelect.ctorParameters;\n/** @type {?} */\nNgbDatepickerNavigationSelect.propDecorators;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.months;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.years;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.date;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.disabled;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.maxDate;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.minDate;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.select;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.i18n;\n/** @type {?} */\nNgbDatepickerNavigationSelect.prototype.calendar;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}