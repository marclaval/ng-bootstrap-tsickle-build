{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../src/tooltip/tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Injector,\n  Renderer,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core/index';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {NgbTooltipConfig} from './tooltip-config';\nexport class NgbTooltipWindow {\n   placement: 'top' | 'bottom' | 'left' | 'right' = 'top';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'[class]': '\"tooltip show tooltip-\" + placement', 'role': 'tooltip'},\n  template: `\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n};\n}\n\nfunction NgbTooltipWindow_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTooltipWindow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTooltipWindow.ctorParameters;\n/** @type {?} */\nNgbTooltipWindow.propDecorators;\n/** @type {?} */\nNgbTooltipWindow.prototype.placement;\n}\n\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\nexport class NgbTooltip implements OnInit, OnDestroy {\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n   placement: 'top' | 'bottom' | 'left' | 'right';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n   triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n   container: string;\n  /**\n * Emits an event when the tooltip is shown\n */\n   shown = new EventEmitter();\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n   hidden = new EventEmitter();\nprivate _ngbTooltip: string | TemplateRef<any>;\nprivate _popupService: PopupService<NgbTooltipWindow>;\nprivate _windowRef: ComponentRef<NgbTooltipWindow>;\nprivate _unregisterListenersFn;\nprivate _zoneSubscription: any;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} injector\n * @param {?} componentFactoryResolver\n * @param {?} viewContainerRef\n * @param {?} config\n * @param {?} ngZone\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      ngZone: NgZone) {\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n/**\n * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n * @param {?} value\n * @return {?}\n */\nset ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n/**\n * @return {?}\n */\nget ngbTooltip() { return this._ngbTooltip; }\n/**\n * Opens an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n * The context is an optional value to be injected into the tooltip template when it is created.\n * @param {?=} context\n * @return {?}\n */\nopen(context?: any) {\n    if (!this._windowRef && this._ngbTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.placement = this.placement;\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // we need to manually invoke change detection since events registered via\n      // Renderer::listen() - to be determined if this is a bug in the Angular itself\n      this._windowRef.changeDetectorRef.markForCheck();\n      this.shown.emit();\n    }\n  }\n/**\n * Closes an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n * @return {?}\n */\nclose(): void {\n    if (this._windowRef != null) {\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n/**\n * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n * @return {?}\n */\ntoggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n/**\n * Returns whether or not the tooltip is currently being shown\n * @return {?}\n */\nisOpen(): boolean { return this._windowRef != null; }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.close();\n    this._unregisterListenersFn();\n    this._zoneSubscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngbTooltip]', exportAs: 'ngbTooltip'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n{type: ViewContainerRef, },\n{type: NgbTooltipConfig, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'placement': [{ type: Input },],\n'triggers': [{ type: Input },],\n'container': [{ type: Input },],\n'shown': [{ type: Output },],\n'hidden': [{ type: Output },],\n'ngbTooltip': [{ type: Input },],\n};\n}\n\nfunction NgbTooltip_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTooltip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTooltip.ctorParameters;\n/** @type {?} */\nNgbTooltip.propDecorators;\n/**\n * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n * @type {?}\n */\nNgbTooltip.prototype.placement;\n/**\n * Specifies events that should trigger. Supports a space separated list of event names.\n * @type {?}\n */\nNgbTooltip.prototype.triggers;\n/**\n * A selector specifying the element the tooltip should be appended to.\n * Currently only supports \"body\".\n * @type {?}\n */\nNgbTooltip.prototype.container;\n/**\n * Emits an event when the tooltip is shown\n * @type {?}\n */\nNgbTooltip.prototype.shown;\n/**\n * Emits an event when the tooltip is hidden\n * @type {?}\n */\nNgbTooltip.prototype.hidden;\n/** @type {?} */\nNgbTooltip.prototype._ngbTooltip;\n/** @type {?} */\nNgbTooltip.prototype._popupService;\n/** @type {?} */\nNgbTooltip.prototype._windowRef;\n/** @type {?} */\nNgbTooltip.prototype._unregisterListenersFn;\n/** @type {?} */\nNgbTooltip.prototype._zoneSubscription;\n/** @type {?} */\nNgbTooltip.prototype._elementRef;\n/** @type {?} */\nNgbTooltip.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
