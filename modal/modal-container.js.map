{"version":3,"sources":["../../../src/modal/modal-container.ts"],"names":[],"mappings":"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","file":"modal-container.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  Injector,\n  ReflectiveInjector,\n  Renderer,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ComponentFactory,\n  ComponentRef\n} from '@angular/core';\nconst Directive: NeverTypeCheckMe = Directive;  /* local alias for Closure JSDoc */\nconst Injector: NeverTypeCheckMe = Injector;  /* local alias for Closure JSDoc */\nconst ReflectiveInjector: NeverTypeCheckMe = ReflectiveInjector;  /* local alias for Closure JSDoc */\nconst Renderer: NeverTypeCheckMe = Renderer;  /* local alias for Closure JSDoc */\nconst TemplateRef: NeverTypeCheckMe = TemplateRef;  /* local alias for Closure JSDoc */\nconst ViewContainerRef: NeverTypeCheckMe = ViewContainerRef;  /* local alias for Closure JSDoc */\nconst ComponentFactoryResolver: NeverTypeCheckMe = ComponentFactoryResolver;  /* local alias for Closure JSDoc */\nconst ComponentFactory: NeverTypeCheckMe = ComponentFactory;  /* local alias for Closure JSDoc */\nconst ComponentRef: NeverTypeCheckMe = ComponentRef;  /* local alias for Closure JSDoc */\n\nimport {isDefined, isString} from '../util/util';\nconst isDefined: NeverTypeCheckMe = isDefined;  /* local alias for Closure JSDoc */\nconst isString: NeverTypeCheckMe = isString;  /* local alias for Closure JSDoc */\nimport {ContentRef} from '../util/popup';\nconst ContentRef: NeverTypeCheckMe = ContentRef;  /* local alias for Closure JSDoc */\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nconst NgbModalBackdrop: NeverTypeCheckMe = NgbModalBackdrop;  /* local alias for Closure JSDoc */\nimport {NgbModalWindow} from './modal-window';\nconst NgbModalWindow: NeverTypeCheckMe = NgbModalWindow;  /* local alias for Closure JSDoc */\nimport {NgbModalStack} from './modal-stack';\nconst NgbModalStack: NeverTypeCheckMe = NgbModalStack;  /* local alias for Closure JSDoc */\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nconst NgbActiveModal: NeverTypeCheckMe = NgbActiveModal;  /* local alias for Closure JSDoc */\nconst NgbModalRef: NeverTypeCheckMe = NgbModalRef;  /* local alias for Closure JSDoc */\n@Directive({selector: 'template[ngbModalContainer]'})\nexport class NgbModalContainer {\nprivate _backdropFactory: ComponentFactory<NgbModalBackdrop>;\nprivate _windowFactory: ComponentFactory<NgbModalWindow>;\n/**\n * @param {!Injector} _injector\n * @param {!Renderer} _renderer\n * @param {!ViewContainerRef} _viewContainerRef\n * @param {!ComponentFactoryResolver} _componentFactoryResolver\n * @param {!NgbModalStack} ngbModalStack\n */\nconstructor(\nprivate _injector: Injector,\nprivate _renderer: Renderer,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _componentFactoryResolver: ComponentFactoryResolver, ngbModalStack: NgbModalStack) {\n    this._backdropFactory = _componentFactoryResolver.resolveComponentFactory(NgbModalBackdrop);\n    this._windowFactory = _componentFactoryResolver.resolveComponentFactory(NgbModalWindow);\n\n    ngbModalStack.registerContainer(this);\n  }\n/**\n * @param {!ComponentFactoryResolver} moduleCFR\n * @param {!Injector} contentInjector\n * @param {(string|!TemplateRef<?>)} content\n * @param {?} options\n * @return {!NgbModalRef}\n */\nopen(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: string | TemplateRef<any>, options):\n      NgbModalRef {\n    const /** @type {!NgbActiveModal} */ activeModal = new NgbActiveModal();\n    const /** @type {!ContentRef} */ contentRef = this._getContentRef(moduleCFR, contentInjector, content, activeModal);\n    let /** @type {!ComponentRef<!NgbModalWindow>} */ windowCmptRef: ComponentRef<NgbModalWindow>;\n    let /** @type {!ComponentRef<!NgbModalBackdrop>} */ backdropCmptRef: ComponentRef<NgbModalBackdrop>;\n    let /** @type {!NgbModalRef} */ ngbModalRef: NgbModalRef;\n\n    if (options.backdrop !== false) {\n      backdropCmptRef = this._viewContainerRef.createComponent(this._backdropFactory, 0, this._injector);\n    }\n\n    windowCmptRef = this._viewContainerRef.createComponent(\n        this._windowFactory, this._viewContainerRef.length - 1, this._injector, contentRef.nodes);\n\n    ngbModalRef = new NgbModalRef(this._viewContainerRef, windowCmptRef, contentRef, backdropCmptRef);\n\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n\n    return ngbModalRef;\n  }\n/**\n * @param {!NgbModalWindow} windowInstance\n * @param {!Object} options\n * @return {void}\n */\nprivate _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    ['backdrop', 'keyboard', 'size', 'windowClass'].forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n/**\n * @param {!ComponentFactoryResolver} moduleCFR\n * @param {!Injector} contentInjector\n * @param {?} content\n * @param {!NgbActiveModal} context\n * @return {!ContentRef}\n */\nprivate _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const /** @type {!EmbeddedViewRef<!NgbActiveModal>} */ viewRef = this._viewContainerRef.createEmbeddedView( /** @type {!TemplateRef<!NgbActiveModal>} */((<TemplateRef<NgbActiveModal>>content)), context);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else if (isString(content)) {\n      return new ContentRef([[this._renderer.createText(null, `${content}`)]]);\n    } else {\n      const /** @type {!ComponentFactory<?>} */ contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n      const /** @type {!ReflectiveInjector} */ modalContentInjector =\n          ReflectiveInjector.resolveAndCreate([{provide: NgbActiveModal, useValue: context}], contentInjector);\n      const /** @type {!ComponentRef<?>} */ componentRef = this._viewContainerRef.createComponent(contentCmptFactory, 0, modalContentInjector);\n      return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n    }\n  }\n}\n\nfunction NgbModalContainer_tsickle_Closure_declarations() {\n/** @type {!ComponentFactory<!NgbModalBackdrop>} */\nNgbModalContainer.prototype._backdropFactory;\n/** @type {!ComponentFactory<!NgbModalWindow>} */\nNgbModalContainer.prototype._windowFactory;\n/** @type {!Injector} */\nNgbModalContainer.prototype._injector;\n/** @type {!Renderer} */\nNgbModalContainer.prototype._renderer;\n/** @type {!ViewContainerRef} */\nNgbModalContainer.prototype._viewContainerRef;\n/** @type {!ComponentFactoryResolver} */\nNgbModalContainer.prototype._componentFactoryResolver;\n}\n\n"]}