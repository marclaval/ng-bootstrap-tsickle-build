{"version":3,"sources":["../../../src/util/triggers.ts"],"names":[],"mappings":"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","file":"triggers.js","sourceRoot":"","sourcesContent":["\nexport class Trigger {\n/**\n * @param {string} open\n * @param {string=} close\n */\nconstructor(public open: string,\npublic close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n/**\n * @return {boolean}\n */\nisManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nfunction Trigger_tsickle_Closure_declarations() {\n/** @type {string} */\nTrigger.prototype.open;\n/** @type {string} */\nTrigger.prototype.close;\n}\n\n\nconst /** @type {?} */ DEFAULT_ALIASES = {\n  hover: ['mouseenter', 'mouseleave']\n};\n/**\n * @param {string} triggers\n * @param {?=} aliases\n * @return {!Array<!Trigger>}\n */\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const /** @type {string} */ trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const /** @type {!Array<!Trigger>} */ parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let /** @type {?} */ alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const /** @type {!Array<!Trigger>} */ manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nconst /** @type {function(): void} */ noopFn = () => {};\n/**\n * @param {?} renderer\n * @param {?} nativeElement\n * @param {string} triggers\n * @param {?} openFn\n * @param {?} closeFn\n * @param {?} toggleFn\n * @return {function(): void}\n */\nexport function listenToTriggers(renderer: any, nativeElement: any, triggers: string, openFn, closeFn, toggleFn) {\n  const /** @type {!Array<!Trigger>} */ parsedTriggers = parseTriggers(triggers);\n  const /** @type {!Array<?>} */ listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return noopFn;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n    } else {\n      listeners.push(\n          renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n    }\n  });\n\n  return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n}\n"]}