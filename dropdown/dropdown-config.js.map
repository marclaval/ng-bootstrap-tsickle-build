{"version":3,"file":"dropdown-config.js","sourceRoot":"","sources":["../../../src/dropdown/dropdown-config.ts"],"names":[],"mappings":"OAAO,EAAC,UAAU,EAAc,MAAM,qBAAqB;AAC3D;;;;GAIG;AACH;IAAA;QACE,OAAE,GAAG,KAAK,CAAC;QACX,cAAS,GAAG,IAAI,CAAC;IAOnB,CAAC;AAAD,CAAC;AANM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,MAAM,EAC7F,CACA;AAED;IACA,gBAAgB;IAChB,iBAAiB,CAAC,UAAU,CAAC;IAC7B;;;OAGG;IACH,iBAAiB,CAAC,cAAc,CAAC;IACjC,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,EAAE,CAAC;IAC/B,gBAAgB;IAChB,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC;AACtC,CAAC","sourcesContent":["import {Injectable, TemplateRef} from '@angular/core/index';\n/**\n * Configuration service for the NgbDropdown directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nexport class NgbDropdownConfig {\n  up = false;\n  autoClose = true;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbDropdownConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDropdownConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDropdownConfig.ctorParameters;\n/** @type {?} */\nNgbDropdownConfig.prototype.up;\n/** @type {?} */\nNgbDropdownConfig.prototype.autoClose;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}