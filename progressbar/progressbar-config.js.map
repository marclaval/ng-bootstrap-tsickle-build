{"version":3,"file":"progressbar-config.js","sourceRoot":"","sources":["../../../src/progressbar/progressbar-config.ts"],"names":[],"mappings":"OAAO,EAAC,UAAU,EAAC,MAAM,eAAe;AACxC;;;;GAIG;AACH;IAAA;QACE,QAAG,GAAG,GAAG,CAAC;QACV,aAAQ,GAAG,KAAK,CAAC;QACjB,YAAO,GAAG,KAAK,CAAC;QAEhB,cAAS,GAAY,KAAK,CAAC;IAO7B,CAAC;AAAD,CAAC;AANM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,MAAM,EAC7F,CACA;AAED;IACA,gBAAgB;IAChB,oBAAoB,CAAC,UAAU,CAAC;IAChC;;;OAGG;IACH,oBAAoB,CAAC,cAAc,CAAC;IACpC,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,GAAG,CAAC;IACnC,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACxC,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,OAAO,CAAC;IACvC,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC;IACpC,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,SAAS,CAAC;AACzC,CAAC","sourcesContent":["import {Injectable} from '@angular/core/index';\n/**\n * Configuration service for the NgbProgressbar component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  type: string;\n  showValue: boolean = false;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbProgressbarConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbProgressbarConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbProgressbarConfig.ctorParameters;\n/** @type {?} */\nNgbProgressbarConfig.prototype.max;\n/** @type {?} */\nNgbProgressbarConfig.prototype.animated;\n/** @type {?} */\nNgbProgressbarConfig.prototype.striped;\n/** @type {?} */\nNgbProgressbarConfig.prototype.type;\n/** @type {?} */\nNgbProgressbarConfig.prototype.showValue;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
