{"version":3,"sources":["../../../src/modal/modal-stack.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAA,UAAE,EAAW,QAAA,EAAU,wBAAA,EAAyB,MAAA,eAAA;AACvD,MAAM,UAAU,GAAqB,UAAU,CAAC,CAAE,mCAAmC;AACrF,MAAM,QAAQ,GAAqB,QAAQ,CAAC,CAAE,mCAAmC;AACjF,MAAM,wBAAwB,GAAqB,wBAAwB,CAAC,CAAE,mCAAmC;OAD1G,EAAA,WAAE,EAAW,MAAA,aAAA;AAIpB,MAAM,WAAW,GAAqB,WAAW,CAAC,CAAE,mCAAmC;OAHhF,EAAA,iBAAE,EAAiB,MAAA,mBAAA;AAK1B,MAAM,iBAAiB,GAAqB,iBAAiB,CAAC,CAAE,mCAAmC;AAEnG;IAEA;;;;;;OAMG;IACH,IAVG,CAAA,SAAA,EAAA,eAAA,EAAA,OAAA,EAAA,OAAA,GAAA,EAAA;QAWC,EAAE,CAAC,CAAC,CAVC,IAAC,CAAI,cAAC,CAAc,CAAC,CAAA;YAWxB,MAVM,IAAI,KAAA,CAWN,4GAA4G,CAVC,CAAC;QAWpH,CAAC;QAED,MAAM,CAVC,IAAA,CAAK,cAAC,CAAc,IAAC,CAAI,SAAC,EAAU,eAAA,EAAiB,OAAA,EAAS,OAAA,CAAQ,CAAC;IAWhF,CAAC;IACH;;;OAGG;IACH,iBAbG,CAAA,cAAA,IAAsD,IAAA,CAAK,cAAC,GAAgB,cAAA,CAAe,CAAC,CAAA;AAc/F,CAAC;AAvBD;IADgE,mCAAmC,CAHlG,UAAA,EAAA;;iBAAA;AA6BD;IACA,iCAAiC;IACjC,aAAa,CAAC,SAAS,CAAC,cAAc,CAAC;AACvC,CAAC","file":"modal-stack.js","sourceRoot":"","sourcesContent":["import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\nconst Injectable: NeverTypeCheckMe = Injectable;  /* local alias for Closure JSDoc */\nconst Injector: NeverTypeCheckMe = Injector;  /* local alias for Closure JSDoc */\nconst ComponentFactoryResolver: NeverTypeCheckMe = ComponentFactoryResolver;  /* local alias for Closure JSDoc */\n\nimport {NgbModalRef} from './modal-ref';\nconst NgbModalRef: NeverTypeCheckMe = NgbModalRef;  /* local alias for Closure JSDoc */\nimport {NgbModalContainer} from './modal-container';\nconst NgbModalContainer: NeverTypeCheckMe = NgbModalContainer;  /* local alias for Closure JSDoc */\n@Injectable()\nexport class NgbModalStack {\nprivate modalContainer: NgbModalContainer;\n/**\n * @param {!ComponentFactoryResolver} moduleCFR\n * @param {!Injector} contentInjector\n * @param {?} content\n * @param {?=} options\n * @return {!NgbModalRef}\n */\nopen(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options = {}): NgbModalRef {\n    if (!this.modalContainer) {\n      throw new Error(\n          'Missing modal container, add <template ngbModalContainer></template> to one of your application templates.');\n    }\n\n    return this.modalContainer.open(moduleCFR, contentInjector, content, options);\n  }\n/**\n * @param {!NgbModalContainer} modalContainer\n * @return {void}\n */\nregisterContainer(modalContainer: NgbModalContainer) { this.modalContainer = modalContainer; }\n}\n\nfunction NgbModalStack_tsickle_Closure_declarations() {\n/** @type {!NgbModalContainer} */\nNgbModalStack.prototype.modalContainer;\n}\n\n"]}