{"version":3,"sources":["../../../src/datepicker/datepicker-navigation-select.ts"],"names":[],"mappings":"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","file":"datepicker-navigation-select.js","sourceRoot":"","sourcesContent":["import {Component, Input, Output, EventEmitter, OnChanges, SimpleChanges} from '@angular/core';\nconst Component: NeverTypeCheckMe = Component;  /* local alias for Closure JSDoc */\nconst Input: NeverTypeCheckMe = Input;  /* local alias for Closure JSDoc */\nconst Output: NeverTypeCheckMe = Output;  /* local alias for Closure JSDoc */\nconst EventEmitter: NeverTypeCheckMe = EventEmitter;  /* local alias for Closure JSDoc */\nconst OnChanges: NeverTypeCheckMe = OnChanges;  /* local alias for Closure JSDoc */\nconst SimpleChanges: NeverTypeCheckMe = SimpleChanges;  /* local alias for Closure JSDoc */\nimport {NgbDate} from './ngb-date';\nconst NgbDate: NeverTypeCheckMe = NgbDate;  /* local alias for Closure JSDoc */\nimport {toInteger} from '../util/util';\nconst toInteger: NeverTypeCheckMe = toInteger;  /* local alias for Closure JSDoc */\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nconst NgbDatepickerI18n: NeverTypeCheckMe = NgbDatepickerI18n;  /* local alias for Closure JSDoc */\nimport {NgbCalendar} from './ngb-calendar';\nconst NgbCalendar: NeverTypeCheckMe = NgbCalendar;  /* local alias for Closure JSDoc */\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  styles: [`\n    select {\n      /* to align with btn-sm */\n      padding: 0.25rem 0.5rem;\n      font-size: 0.875rem;      \n      line-height: 1.25;\n      /* to cancel the custom height set by custom-select */\n      height: inherit;\n      width: 50%;\n    }\n  `],\n  template: `\n    <select [disabled]=\"disabled\" class=\"custom-select d-inline-block\" [value]=\"date?.month\" (change)=\"changeMonth($event.target.value)\">\n      <option *ngFor=\"let m of months\" [value]=\"m\">{{ i18n.getMonthShortName(m) }}</option>\n    </select>` +\n      `<select [disabled]=\"disabled\" class=\"custom-select d-inline-block\" [value]=\"date?.year\" (change)=\"changeYear($event.target.value)\">\n      <option *ngFor=\"let y of years\" [value]=\"y\">{{ y }}</option>\n    </select> \n  `  // template needs to be formatted in a certain way so we don't add empty text nodes\n})\nexport class NgbDatepickerNavigationSelect implements OnChanges {\n  months: number[];\n  years: number[] = [];\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() maxDate: NgbDate;\n  @Input() minDate: NgbDate;\n\n  @Output() select = new EventEmitter<NgbDate>();\n/**\n * @param {!NgbDatepickerI18n} i18n\n * @param {!NgbCalendar} calendar\n */\nconstructor(public i18n: NgbDatepickerI18n,\nprivate calendar: NgbCalendar) { this.months = calendar.getMonths(); }\n/**\n * @param {!SimpleChanges} changes\n * @return {void}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['maxDate'] || changes['minDate'] || changes['date']) {\n      this._generateYears();\n      this._generateMonths();\n    }\n  }\n/**\n * @param {string} month\n * @return {void}\n */\nchangeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n/**\n * @param {string} year\n * @return {void}\n */\nchangeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n/**\n * @return {void}\n */\nprivate _generateMonths() {\n    this.months = this.calendar.getMonths();\n\n    if (this.date && this.date.year === this.minDate.year) {\n      const /** @type {number} */ index = this.months.findIndex(month => month === this.minDate.month);\n      this.months = this.months.slice(index);\n    }\n\n    if (this.date && this.date.year === this.maxDate.year) {\n      const /** @type {number} */ index = this.months.findIndex(month => month === this.maxDate.month);\n      this.months = this.months.slice(0, index + 1);\n    }\n  }\n/**\n * @return {void}\n */\nprivate _generateYears() {\n    this.years = Array.from({length: this.maxDate.year - this.minDate.year + 1}, (e, i) => this.minDate.year + i);\n  }\n}\n\nfunction NgbDatepickerNavigationSelect_tsickle_Closure_declarations() {\n/** @type {!Array<number>} */\nNgbDatepickerNavigationSelect.prototype.months;\n/** @type {!Array<number>} */\nNgbDatepickerNavigationSelect.prototype.years;\n/** @type {!NgbDate} */\nNgbDatepickerNavigationSelect.prototype.date;\n/** @type {boolean} */\nNgbDatepickerNavigationSelect.prototype.disabled;\n/** @type {!NgbDate} */\nNgbDatepickerNavigationSelect.prototype.maxDate;\n/** @type {!NgbDate} */\nNgbDatepickerNavigationSelect.prototype.minDate;\n/** @type {!EventEmitter<!NgbDate>} */\nNgbDatepickerNavigationSelect.prototype.select;\n/** @type {!NgbDatepickerI18n} */\nNgbDatepickerNavigationSelect.prototype.i18n;\n/** @type {!NgbCalendar} */\nNgbDatepickerNavigationSelect.prototype.calendar;\n}\n\n"]}