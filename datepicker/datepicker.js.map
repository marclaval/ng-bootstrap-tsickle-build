{"version":3,"file":"datepicker.js","sourceRoot":"","sources":["../../../src/datepicker/datepicker.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  OnChanges,\n  TemplateRef,\n  forwardRef,\n  OnInit,\n  SimpleChanges,\n  EventEmitter,\n  Output\n} from '@angular/core/index';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms/index';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {MonthViewModel, NavigationEvent} from './datepicker-view-model';\nimport {toInteger} from '../util/util';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nconst /** @type {?} */ NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * The payload of the datepicker navigation event\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * Currently displayed month\n   */\n  current: {year: number, month: number};\n\n  /**\n   * Month we're navigating to\n   */\n  next: {year: number, month: number};\n}\n/**\n * A lightweight and highly configurable datepicker directive\n */\nexport class NgbDatepicker implements OnChanges,\n    OnInit, ControlValueAccessor {\n  _date: NgbDate;\n  _maxDate: NgbDate;\n  _minDate: NgbDate;\n\n  model: NgbDate;\n  months: MonthViewModel[] = [];\n\n  /**\n   * Reference for the custom template for the day display\n   */\n   dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Number of months to display\n   */\n   displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n   firstDayOfWeek: number;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n   markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n   */\n   minDate: NgbDateStruct;\n\n  /**\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n   */\n   maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n   navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n   outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Whether to display days of the week\n   */\n   showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n   showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n   startDate: {year: number, month: number};\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n   navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  disabled = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _service\n * @param {?} _calendar\n * @param {?} i18n\n * @param {?} config\n */\nconstructor(\nprivate _service: NgbDatepickerService,\nprivate _calendar: NgbCalendar,\npublic i18n: NgbDatepickerI18n,\n      config: NgbDatepickerConfig) {\n    this.dayTemplate = config.dayTemplate;\n    this.displayMonths = config.displayMonths;\n    this.firstDayOfWeek = config.firstDayOfWeek;\n    this.markDisabled = config.markDisabled;\n    this.minDate = config.minDate;\n    this.maxDate = config.maxDate;\n    this.navigation = config.navigation;\n    this.outsideDays = config.outsideDays;\n    this.showWeekdays = config.showWeekdays;\n    this.showWeekNumbers = config.showWeekNumbers;\n    this.startDate = config.startDate;\n  }\n/**\n * @return {?}\n */\ngetHeaderHeight() {\n    const /** @type {?} */ h = this.showWeekdays ? 6.25 : 4.25;\n    return this.displayMonths === 1 || this.navigation !== 'select' ? h - 2 : h;\n  }\n/**\n * @return {?}\n */\ngetHeaderMargin() {\n    const /** @type {?} */ m = this.showWeekdays ? 2 : 0;\n    return this.displayMonths !== 1 || this.navigation !== 'select' ? m + 2 : m;\n  }\n/**\n * Navigates current view to provided date.\n * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n * If nothing or invalid date provided calendar will open current month.\n * Use 'startDate' input as an alternative\n * @param {?=} date\n * @return {?}\n */\nnavigateTo(date?: {year: number, month: number}) {\n    this._setViewWithinLimits(this._service.toValidDate(date));\n    this._updateData();\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._setDates();\n    this.navigateTo(this._date);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this._setDates();\n    this._setViewWithinLimits(this._date);\n\n    if (changes['displayMonths']) {\n      this.displayMonths = toInteger(this.displayMonths);\n    }\n\n    // we have to force rebuild all months only if any of these inputs changes\n    if (['startDate', 'minDate', 'maxDate', 'navigation', 'firstDayOfWeek', 'markDisabled', 'displayMonths'].some(\n            input => !!changes[input])) {\n      this._updateData(true);\n    }\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nonDateSelect(date: NgbDate) {\n    this._setViewWithinLimits(date);\n\n    this.onTouched();\n    this.writeValue(date);\n    this.onChange({year: date.year, month: date.month, day: date.day});\n\n    // switch current month\n    if (this._date.month !== this.months[0].number && this.displayMonths === 1) {\n      this._updateData();\n    }\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nonNavigateDateSelect(date: NgbDate) {\n    this._setViewWithinLimits(date);\n    this._updateData();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._setViewWithinLimits(this._calendar.getPrev(this.months[0].firstDate, 'm'));\n        break;\n      case NavigationEvent.NEXT:\n        this._setViewWithinLimits(this._calendar.getNext(this.months[0].firstDate, 'm'));\n        break;\n    }\n\n    this._updateData();\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value) { this.model = this._service.toValidDate(value, null); }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n/**\n * @return {?}\n */\nprivate _setDates() {\n    this._maxDate = NgbDate.from(this.maxDate);\n    this._minDate = NgbDate.from(this.minDate);\n    this._date = this._service.toValidDate(this.startDate);\n\n    if (!this._calendar.isValid(this._minDate)) {\n      this._minDate = this._calendar.getPrev(this._date, 'y', 10);\n      this.minDate = {year: this._minDate.year, month: this._minDate.month, day: this._minDate.day};\n    }\n\n    if (!this._calendar.isValid(this._maxDate)) {\n      this._maxDate = this._calendar.getNext(this._date, 'y', 11);\n      this._maxDate = this._calendar.getPrev(this._maxDate);\n      this.maxDate = {year: this._maxDate.year, month: this._maxDate.month, day: this._maxDate.day};\n    }\n\n    if (this._minDate && this._maxDate && this._maxDate.before(this._minDate)) {\n      throw new Error(`'maxDate' ${this._maxDate} should be greater than 'minDate' ${this._minDate}`);\n    }\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nprivate _setViewWithinLimits(date: NgbDate) {\n    if (this._minDate && date.before(this._minDate)) {\n      this._date = new NgbDate(this._minDate.year, this._minDate.month, 1);\n    } else if (this._maxDate && date.after(this._maxDate)) {\n      this._date = new NgbDate(this._maxDate.year, this._maxDate.month, 1);\n    } else {\n      this._date = new NgbDate(date.year, date.month, 1);\n    }\n  }\n/**\n * @param {?=} force\n * @return {?}\n */\nprivate _updateData(force = false) {\n    const /** @type {?} */ newMonths = [];\n    for (let /** @type {?} */ i = 0; i < this.displayMonths; i++) {\n      const /** @type {?} */ newDate = this._calendar.getNext(this._date, 'm', i);\n      const /** @type {?} */ index = this.months.findIndex(month => month.firstDate.equals(newDate));\n\n      if (force || index === -1) {\n        newMonths.push(\n            this._service.generateMonthViewModel(\n                newDate, this._minDate, this._maxDate, toInteger(this.firstDayOfWeek), this.markDisabled));\n      } else {\n        newMonths.push(this.months[index]);\n      }\n    }\n\n    const /** @type {?} */ newDate = newMonths[0].firstDate;\n    const /** @type {?} */ oldDate = this.months[0] ? this.months[0].firstDate : null;\n\n    this.months = newMonths;\n\n    // emitting navigation event if the first month changes\n    if (!newDate.equals(oldDate)) {\n      this.navigate.emit({\n        current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n        next: {year: newDate.year, month: newDate.month}\n      });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  host: {'class': 'd-inline-block rounded'},\n  styles: [`\n    :host {\n      border: 1px solid rgba(0, 0, 0, 0.125);\n    }\n    .ngb-dp-header {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n    }\n    .ngb-dp-month {\n      pointer-events: none;\n    }\n    ngb-datepicker-month-view {\n      pointer-events: auto;\n    }\n    .ngb-dp-month:first-child {\n      margin-left: 0 !important;\n    }    \n    .ngb-dp-month-name {\n      font-size: larger;\n      height: 2rem;\n      line-height: 2rem;\n    }    \n  `],\n  template: `\n    <template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\">\n       <div ngbDatepickerDayView [date]=\"date\" [currentMonth]=\"currentMonth\" [selected]=\"selected\" [disabled]=\"disabled\"></div>\n    </template>\n    \n    <div class=\"ngb-dp-header bg-faded pt-1 rounded-top\" [style.height.rem]=\"getHeaderHeight()\" \n      [style.marginBottom.rem]=\"-getHeaderMargin()\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"months[0]?.firstDate\"\n        [minDate]=\"_minDate\"\n        [maxDate]=\"_maxDate\"\n        [months]=\"months.length\"\n        [disabled]=\"disabled\"\n        [showWeekNumbers]=\"showWeekNumbers\"\n        [showSelect]=\"navigation === 'select'\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-months d-flex px-1 pb-1\">\n      <template ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n        <div class=\"ngb-dp-month d-block ml-3\">            \n          <div *ngIf=\"navigation !== 'select' || displayMonths > 1\" class=\"ngb-dp-month-name text-center\">\n            {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [selectedDate]=\"model\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            [disabled]=\"disabled\"\n            [outsideDays]=\"displayMonths === 1 ? outsideDays : 'hidden'\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </template>\n    </div>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDatepickerService, },\n{type: NgbCalendar, },\n{type: NgbDatepickerI18n, },\n{type: NgbDatepickerConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dayTemplate': [{ type: Input },],\n'displayMonths': [{ type: Input },],\n'firstDayOfWeek': [{ type: Input },],\n'markDisabled': [{ type: Input },],\n'minDate': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'navigation': [{ type: Input },],\n'outsideDays': [{ type: Input },],\n'showWeekdays': [{ type: Input },],\n'showWeekNumbers': [{ type: Input },],\n'startDate': [{ type: Input },],\n'navigate': [{ type: Output },],\n};\n}\n\nfunction NgbDatepicker_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepicker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepicker.ctorParameters;\n/** @type {?} */\nNgbDatepicker.propDecorators;\n/** @type {?} */\nNgbDatepicker.prototype._date;\n/** @type {?} */\nNgbDatepicker.prototype._maxDate;\n/** @type {?} */\nNgbDatepicker.prototype._minDate;\n/** @type {?} */\nNgbDatepicker.prototype.model;\n/** @type {?} */\nNgbDatepicker.prototype.months;\n/**\n * Reference for the custom template for the day display\n * @type {?}\n */\nNgbDatepicker.prototype.dayTemplate;\n/**\n * Number of months to display\n * @type {?}\n */\nNgbDatepicker.prototype.displayMonths;\n/**\n * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n * @type {?}\n */\nNgbDatepicker.prototype.firstDayOfWeek;\n/**\n * Callback to mark a given date as disabled.\n * 'Current' contains the month that will be displayed in the view\n * @type {?}\n */\nNgbDatepicker.prototype.markDisabled;\n/**\n * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n * @type {?}\n */\nNgbDatepicker.prototype.minDate;\n/**\n * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n * @type {?}\n */\nNgbDatepicker.prototype.maxDate;\n/**\n * Navigation type: `select` (default with select boxes for month and year), `arrows`\n * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n * @type {?}\n */\nNgbDatepicker.prototype.navigation;\n/**\n * The way to display days that don't belong to current month: `visible` (default),\n * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n * @type {?}\n */\nNgbDatepicker.prototype.outsideDays;\n/**\n * Whether to display days of the week\n * @type {?}\n */\nNgbDatepicker.prototype.showWeekdays;\n/**\n * Whether to display week numbers\n * @type {?}\n */\nNgbDatepicker.prototype.showWeekNumbers;\n/**\n * Date to open calendar with.\n * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n * If nothing or invalid date provided, calendar will open with current month.\n * Use 'navigateTo(date)' as an alternative\n * @type {?}\n */\nNgbDatepicker.prototype.startDate;\n/**\n * An event fired when navigation happens and currently displayed month changes.\n * See NgbDatepickerNavigateEvent for the payload info.\n * @type {?}\n */\nNgbDatepicker.prototype.navigate;\n/** @type {?} */\nNgbDatepicker.prototype.disabled;\n/** @type {?} */\nNgbDatepicker.prototype.onChange;\n/** @type {?} */\nNgbDatepicker.prototype.onTouched;\n/** @type {?} */\nNgbDatepicker.prototype._service;\n/** @type {?} */\nNgbDatepicker.prototype._calendar;\n/** @type {?} */\nNgbDatepicker.prototype.i18n;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}