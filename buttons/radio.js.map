{"version":3,"sources":["../../../src/buttons/radio.ts"],"names":[],"mappings":"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","file":"radio.js","sourceRoot":"","sourcesContent":["import {Directive, forwardRef, Optional, Input, Renderer, ElementRef, OnDestroy} from '@angular/core';\nconst Directive: NeverTypeCheckMe = Directive;  /* local alias for Closure JSDoc */\nconst forwardRef: NeverTypeCheckMe = forwardRef;  /* local alias for Closure JSDoc */\nconst Optional: NeverTypeCheckMe = Optional;  /* local alias for Closure JSDoc */\nconst Input: NeverTypeCheckMe = Input;  /* local alias for Closure JSDoc */\nconst Renderer: NeverTypeCheckMe = Renderer;  /* local alias for Closure JSDoc */\nconst ElementRef: NeverTypeCheckMe = ElementRef;  /* local alias for Closure JSDoc */\nconst OnDestroy: NeverTypeCheckMe = OnDestroy;  /* local alias for Closure JSDoc */\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nconst ControlValueAccessor: NeverTypeCheckMe = ControlValueAccessor;  /* local alias for Closure JSDoc */\nconst NG_VALUE_ACCESSOR: NeverTypeCheckMe = NG_VALUE_ACCESSOR;  /* local alias for Closure JSDoc */\n\nconst /** @type {?} */ NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n/**\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\n * specified via ngModel.\n */\n@Directive({\n  selector: '[ngbRadioGroup]',\n  host: {'data-toggle': 'buttons', 'class': 'btn-group'},\n  providers: [NGB_RADIO_VALUE_ACCESSOR]\n})\nexport class NgbRadioGroup implements ControlValueAccessor {\nprivate _radios: Set<NgbRadio> = new Set<NgbRadio>();\nprivate _value = null;\nprivate _disabled: boolean;\n/**\n * @return {boolean}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {boolean} isDisabled\n * @return {void}\n */\nset disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {!NgbRadio} radio\n * @return {void}\n */\nonRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n/**\n * @return {void}\n */\nonRadioValueUpdate() { this._updateRadiosValue(); }\n/**\n * @param {!NgbRadio} radio\n * @return {void}\n */\nregister(radio: NgbRadio) { this._radios.add(radio); }\n/**\n * @param {function(?): ?} fn\n * @return {void}\n */\nregisterOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n/**\n * @param {function(): ?} fn\n * @return {void}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {boolean} isDisabled\n * @return {void}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n/**\n * @param {!NgbRadio} radio\n * @return {void}\n */\nunregister(radio: NgbRadio) { this._radios.delete(radio); }\n/**\n * @param {?} value\n * @return {void}\n */\nwriteValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n/**\n * @return {void}\n */\nprivate _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n/**\n * @return {void}\n */\nprivate _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\nfunction NgbRadioGroup_tsickle_Closure_declarations() {\n/** @type {!Set<!NgbRadio>} */\nNgbRadioGroup.prototype._radios;\n/** @type {?} */\nNgbRadioGroup.prototype._value;\n/** @type {boolean} */\nNgbRadioGroup.prototype._disabled;\n/** @type {function(?): void} */\nNgbRadioGroup.prototype.onChange;\n/** @type {function(): void} */\nNgbRadioGroup.prototype.onTouched;\n}\n\n@Directive({selector: 'label.btn'})\nexport class NgbActiveLabel {\n/**\n * @param {!Renderer} _renderer\n * @param {!ElementRef} _elRef\n */\nconstructor(private _renderer: Renderer,\nprivate _elRef: ElementRef) {}\n/**\n * @param {boolean} isActive\n * @return {void}\n */\nset active(isActive: boolean) { this._renderer.setElementClass(this._elRef.nativeElement, 'active', isActive); }\n/**\n * @param {boolean} isDisabled\n * @return {void}\n */\nset disabled(isDisabled: boolean) {\n    this._renderer.setElementClass(this._elRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * @param {boolean} isFocused\n * @return {void}\n */\nset focused(isFocused: boolean) { this._renderer.setElementClass(this._elRef.nativeElement, 'focus', isFocused); }\n}\n\nfunction NgbActiveLabel_tsickle_Closure_declarations() {\n/** @type {!Renderer} */\nNgbActiveLabel.prototype._renderer;\n/** @type {!ElementRef} */\nNgbActiveLabel.prototype._elRef;\n}\n\n/**\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\n */\n@Directive({\n  selector: 'input[type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\nprivate _checked: boolean;\nprivate _disabled: boolean;\nprivate _value: any = null;\n/**\n * You can specify model value of a given radio by binding to the value property.\n * @param {?} value\n * @return {void}\n */\n@Input('value')\n  set value(value: any) {\n    this._value = value;\n    const /** @type {?} */ stringValue = value ? value.toString() : '';\n    this._renderer.setElementProperty(this._element.nativeElement, 'value', stringValue);\n\n    if (this._group) {\n      this._group.onRadioValueUpdate();\n    }\n  }\n/**\n * @param {?} value\n * @return {void}\n */\n@Input('checked')\n  set checked(value: any) {\n    this._checked = this._element.nativeElement.hasAttribute('checked') ? true : value;\n  }\n/**\n * @param {?} isDisabled\n * @return {void}\n */\n@Input('disabled')\n  set disabled(isDisabled: any) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n/**\n * @param {boolean} isFocused\n * @return {void}\n */\nset focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n  }\n/**\n * @return {?}\n */\nget value() { return this._value; }\n/**\n * @return {?}\n */\nget checked() { return this._checked; }\n/**\n * @return {?}\n */\nget disabled() { return (this._group && this._group.disabled) || this._disabled; }\n/**\n * @param {!NgbRadioGroup} _group\n * @param {!NgbActiveLabel} _label\n * @param {!Renderer} _renderer\n * @param {!ElementRef} _element\n */\nconstructor(\n      @Optional()\nprivate _group: NgbRadioGroup, @Optional()\nprivate _label: NgbActiveLabel,\nprivate _renderer: Renderer,\nprivate _element: ElementRef) {\n    if (this._group) {\n      this._group.register(this);\n    }\n  }\n/**\n * @return {void}\n */\nngOnDestroy() {\n    if (this._group) {\n      this._group.unregister(this);\n    }\n  }\n/**\n * @return {void}\n */\nonChange() {\n    if (this._group) {\n      this._group.onRadioChange(this);\n    }\n  }\n/**\n * @param {?} value\n * @return {void}\n */\nupdateValue(value) {\n    this._checked = (this.value === value && value !== null);\n    this._label.active = this._checked;\n  }\n/**\n * @return {void}\n */\nupdateDisabled() {\n    let /** @type {boolean} */ disabled = (this._group && this._group.disabled) || this._disabled;\n    if (this._label) {\n      this._label.disabled = disabled;\n    }\n  }\n}\n\nfunction NgbRadio_tsickle_Closure_declarations() {\n/** @type {boolean} */\nNgbRadio.prototype._checked;\n/** @type {boolean} */\nNgbRadio.prototype._disabled;\n/** @type {?} */\nNgbRadio.prototype._value;\n/** @type {!NgbRadioGroup} */\nNgbRadio.prototype._group;\n/** @type {!NgbActiveLabel} */\nNgbRadio.prototype._label;\n/** @type {!Renderer} */\nNgbRadio.prototype._renderer;\n/** @type {!ElementRef} */\nNgbRadio.prototype._element;\n}\n\n"]}