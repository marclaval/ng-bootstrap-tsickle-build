{"version":3,"file":"datepicker-config.js","sourceRoot":"","sources":["../../../src/datepicker/datepicker-config.ts"],"names":[],"mappings":"OAAO,EAAC,UAAU,EAAc,MAAM,qBAAqB;AAG3D;;;;GAIG;AACH;IAAA;QAEE,kBAAa,GAAG,CAAC,CAAC;QAClB,mBAAc,GAAG,CAAC,CAAC;QAInB,eAAU,GAAiC,QAAQ,CAAC;QACpD,gBAAW,GAAuC,SAAS,CAAC;QAC5D,iBAAY,GAAG,IAAI,CAAC;QACpB,oBAAe,GAAG,KAAK,CAAC;IAQ1B,CAAC;AAAD,CAAC;AANM,8BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,kCAAc,GAAmE,MAAM,EAC7F,CACA;AAED;IACA,gBAAgB;IAChB,mBAAmB,CAAC,UAAU,CAAC;IAC/B;;;OAGG;IACH,mBAAmB,CAAC,cAAc,CAAC;IACnC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,WAAW,CAAC;IAC1C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,aAAa,CAAC;IAC5C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,cAAc,CAAC;IAC7C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,YAAY,CAAC;IAC3C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;IACtC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,OAAO,CAAC;IACtC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,UAAU,CAAC;IACzC,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,WAAW,CAAC;IAC1C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,YAAY,CAAC;IAC3C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,eAAe,CAAC;IAC9C,gBAAgB;IAChB,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC;AACxC,CAAC","sourcesContent":["import {Injectable, TemplateRef} from '@angular/core/index';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n/**\n * Configuration service for the NgbDatepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbDatepickerConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbDatepickerConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbDatepickerConfig.ctorParameters;\n/** @type {?} */\nNgbDatepickerConfig.prototype.dayTemplate;\n/** @type {?} */\nNgbDatepickerConfig.prototype.displayMonths;\n/** @type {?} */\nNgbDatepickerConfig.prototype.firstDayOfWeek;\n/** @type {?} */\nNgbDatepickerConfig.prototype.markDisabled;\n/** @type {?} */\nNgbDatepickerConfig.prototype.minDate;\n/** @type {?} */\nNgbDatepickerConfig.prototype.maxDate;\n/** @type {?} */\nNgbDatepickerConfig.prototype.navigation;\n/** @type {?} */\nNgbDatepickerConfig.prototype.outsideDays;\n/** @type {?} */\nNgbDatepickerConfig.prototype.showWeekdays;\n/** @type {?} */\nNgbDatepickerConfig.prototype.showWeekNumbers;\n/** @type {?} */\nNgbDatepickerConfig.prototype.startDate;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}