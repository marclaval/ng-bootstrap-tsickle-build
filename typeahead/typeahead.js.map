{"version":3,"file":"typeahead.js","sourceRoot":"","sources":["../../../src/typeahead/typeahead.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  Injector,\n  Renderer,\n  ElementRef,\n  TemplateRef,\n  forwardRef,\n  OnDestroy,\n  NgZone\n} from '@angular/core/index';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms/index';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {letProto} from 'rxjs/operator/let';\nimport {_do} from 'rxjs/operator/do';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\nimport {positionElements} from '../util/positioning';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\nimport {PopupService} from '../util/popup';\nimport {toString, isDefined} from '../util/util';\nimport {NgbTypeaheadConfig} from './typeahead-config';\ntype Key = number;\nlet Key: any = {};\nKey.Tab = 9;\nKey.Enter = 13;\nKey.Escape = 27;\nKey.ArrowUp = 38;\nKey.ArrowDown = 40;\nKey[Key.Tab] = \"Tab\";\nKey[Key.Enter] = \"Enter\";\nKey[Key.Escape] = \"Escape\";\nKey[Key.ArrowUp] = \"ArrowUp\";\nKey[Key.ArrowDown] = \"ArrowDown\";\n\n\nconst /** @type {?} */ NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * Payload of the selectItem event.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * An item about to be selected\n   */\n  item: any;\n\n  /**\n   * Function that will prevent item selection if called\n   */\n  preventDefault: () => void;\n}\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\nprivate _popupService: PopupService<NgbTypeaheadWindow>;\nprivate _subscription: Subscription;\nprivate _userInput: string;\nprivate _valueChanges: Observable<string>;\nprivate _windowRef: ComponentRef<NgbTypeaheadWindow>;\nprivate _zoneSubscription: any;\n\n\n  /**\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\n   */\n   editable: boolean;\n\n  /**\n   * A flag indicating if the first match should automatically be focused as you type.\n   */\n   focusFirst: boolean;\n\n  /**\n   * A function to convert a given value into string to display in the input field\n   */\n   inputFormatter: (value: any) => string;\n\n  /**\n   * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\n   * is undefined so you need to explicitly bind it to a desired \"this\" target.\n   */\n   ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * A function to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n   resultFormatter: (value: any) => string;\n\n  /**\n   * A template to override a matching result default display\n   */\n   resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Show hint when an option in the result list matches.\n   */\n   showHint: boolean;\n\n  /**\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n   */\n   selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\nprivate _onTouched = () => {};\nprivate _onChange = (_: any) => {};\n/**\n * @param {?} _elementRef\n * @param {?} _viewContainerRef\n * @param {?} _renderer\n * @param {?} _injector\n * @param {?} componentFactoryResolver\n * @param {?} config\n * @param {?} ngZone\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _renderer: Renderer,\nprivate _injector: Injector, componentFactoryResolver: ComponentFactoryResolver, config: NgbTypeaheadConfig,\n      ngZone: NgZone) {\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n\n    this._valueChanges = fromEvent(_elementRef.nativeElement, 'input', ($event) => $event.target.value);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, 'bottom-left');\n      }\n    });\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    const /** @type {?} */ inputValues$ = _do.call(this._valueChanges, value => {\n      this._userInput = value;\n      if (this.editable) {\n        this._onChange(value);\n      }\n    });\n    const /** @type {?} */ results$ = letProto.call(inputValues$, this.ngbTypeahead);\n    const /** @type {?} */ userInput$ = _do.call(results$, () => {\n      if (!this.editable) {\n        this._onChange(undefined);\n      }\n    });\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this._onTouched = fn; }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * @return {?}\n */\ndismissPopup() {\n    if (this.isPopupOpen()) {\n      this._closePopup();\n      this._writeInputValue(this._userInput);\n    }\n  }\n/**\n * @return {?}\n */\nisPopupOpen() { return this._windowRef != null; }\n/**\n * @return {?}\n */\nhandleBlur() { this._onTouched(); }\n/**\n * @param {?} event\n * @return {?}\n */\nhandleKeyDown(event: KeyboardEvent) {\n    if (!this._windowRef) {\n      return;\n    }\n\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case Key.ArrowUp:\n          event.preventDefault();\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case Key.Enter:\n        case Key.Tab:\n          const /** @type {?} */ result = this._windowRef.instance.getActive();\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n            this._selectResult(result);\n          }\n          this._closePopup();\n          break;\n        case Key.Escape:\n          event.preventDefault();\n          this.dismissPopup();\n          break;\n      }\n    }\n  }\n/**\n * @return {?}\n */\nprivate _openPopup() {\n    if (!this._windowRef) {\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n    }\n  }\n/**\n * @return {?}\n */\nprivate _closePopup() {\n    this._popupService.close();\n    this._windowRef = null;\n  }\n/**\n * @param {?} result\n * @return {?}\n */\nprivate _selectResult(result: any) {\n    let /** @type {?} */ defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n/**\n * @param {?} result\n * @return {?}\n */\nprivate _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n/**\n * @return {?}\n */\nprivate _showHint() {\n    if (this.showHint) {\n      const /** @type {?} */ userInputLowerCase = this._userInput.toLowerCase();\n      const /** @type {?} */ formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._userInput.length).toLowerCase()) {\n        this._writeInputValue(this._userInput + formattedVal.substr(this._userInput.length));\n        this._renderer.invokeElementMethod(\n            this._elementRef.nativeElement, 'setSelectionRange', [this._userInput.length, formattedVal.length]);\n      } else {\n        this.writeValue(this._windowRef.instance.getActive());\n      }\n    }\n  }\n/**\n * @param {?} item\n * @return {?}\n */\nprivate _formatItemForInput(item: any): string {\n    return item && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _writeInputValue(value: string): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', value);\n  }\n/**\n * @param {?} userInput$\n * @return {?}\n */\nprivate _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._showHint();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[ngbTypeahead]',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(document:click)': 'dismissPopup()',\n    '(keydown)': 'handleKeyDown($event)',\n    'autocomplete': 'off',\n    'autocapitalize': 'off',\n    'autocorrect': 'off'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer, },\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n{type: NgbTypeaheadConfig, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'editable': [{ type: Input },],\n'focusFirst': [{ type: Input },],\n'inputFormatter': [{ type: Input },],\n'ngbTypeahead': [{ type: Input },],\n'resultFormatter': [{ type: Input },],\n'resultTemplate': [{ type: Input },],\n'showHint': [{ type: Input },],\n'selectItem': [{ type: Output },],\n};\n}\n\nfunction NgbTypeahead_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTypeahead.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTypeahead.ctorParameters;\n/** @type {?} */\nNgbTypeahead.propDecorators;\n/** @type {?} */\nNgbTypeahead.prototype._popupService;\n/** @type {?} */\nNgbTypeahead.prototype._subscription;\n/** @type {?} */\nNgbTypeahead.prototype._userInput;\n/** @type {?} */\nNgbTypeahead.prototype._valueChanges;\n/** @type {?} */\nNgbTypeahead.prototype._windowRef;\n/** @type {?} */\nNgbTypeahead.prototype._zoneSubscription;\n/**\n * A flag indicating if model values should be restricted to the ones selected from the popup only.\n * @type {?}\n */\nNgbTypeahead.prototype.editable;\n/**\n * A flag indicating if the first match should automatically be focused as you type.\n * @type {?}\n */\nNgbTypeahead.prototype.focusFirst;\n/**\n * A function to convert a given value into string to display in the input field\n * @type {?}\n */\nNgbTypeahead.prototype.inputFormatter;\n/**\n * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\n * is undefined so you need to explicitly bind it to a desired \"this\" target.\n * @type {?}\n */\nNgbTypeahead.prototype.ngbTypeahead;\n/**\n * A function to format a given result before display. This function should return a formatted string without any\n * HTML markup\n * @type {?}\n */\nNgbTypeahead.prototype.resultFormatter;\n/**\n * A template to override a matching result default display\n * @type {?}\n */\nNgbTypeahead.prototype.resultTemplate;\n/**\n * Show hint when an option in the result list matches.\n * @type {?}\n */\nNgbTypeahead.prototype.showHint;\n/**\n * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n * @type {?}\n */\nNgbTypeahead.prototype.selectItem;\n/** @type {?} */\nNgbTypeahead.prototype._onTouched;\n/** @type {?} */\nNgbTypeahead.prototype._onChange;\n/** @type {?} */\nNgbTypeahead.prototype._elementRef;\n/** @type {?} */\nNgbTypeahead.prototype._viewContainerRef;\n/** @type {?} */\nNgbTypeahead.prototype._renderer;\n/** @type {?} */\nNgbTypeahead.prototype._injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
