{"version":3,"file":"alert.js","sourceRoot":"","sources":["../../../src/alert/alert.ts"],"names":[],"mappings":"OAAO,EACL,SAAS,EACT,KAAK,EACL,MAAM,EACN,YAAY,EACZ,uBAAuB,EACxB,MAAM,qBAAqB;OAErB,EAAC,cAAc,EAAC,MAAM,gBAAgB;AAC7C;;GAEG;AACH;IAcA;;OAEG;IACH,YAAY,MAAsB;QAPhC;;WAEG;QACF,UAAK,GAAG,IAAI,YAAY,EAAE,CAAC;QAK1B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IAC1B,CAAC;IACH;;OAEG;IACH,YAAY,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAwBzC,CAAC;AAvBM,mBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,WAAW;gBACrB,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,QAAQ,EAAE;;;;;;;KAOP;aACJ,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,uBAAc,GAAmE,MAAM;IAC9F,EAAC,IAAI,EAAE,cAAc,GAAG;CACvB,CAAC;AACK,uBAAc,GAA2C;IAChE,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACjC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAC3B,CACA;AAED;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,cAAc,CAAC;IACxB;;;;OAIG;IACH,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC;IAC/B;;;OAGG;IACH,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;IACxB;;;OAGG;IACH,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;AACzB,CAAC","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core/index';\n\nimport {NgbAlertConfig} from './alert-config';\n/**\n * Alerts can be used to provide feedback messages.\n */\nexport class NgbAlert {\n  /**\n   * A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\n   * form of an ×) will be displayed.\n   */\n   dismissible: boolean;\n  /**\n   * Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\".\n   */\n   type: string;\n  /**\n   * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n   */\n   close = new EventEmitter();\n/**\n * @param {?} config\n */\nconstructor(config: NgbAlertConfig) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n/**\n * @return {?}\n */\ncloseHandler() { this.close.emit(null); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div [class]=\"'alert alert-' + type + (dismissible ? ' alert-dismissible' : '')\" role=\"alert\">\n      <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeHandler()\">\n            <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <ng-content></ng-content>\n    </div>\n    `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbAlertConfig, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dismissible': [{ type: Input },],\n'type': [{ type: Input },],\n'close': [{ type: Output },],\n};\n}\n\nfunction NgbAlert_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbAlert.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbAlert.ctorParameters;\n/** @type {?} */\nNgbAlert.propDecorators;\n/**\n * A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\n * form of an ×) will be displayed.\n * @type {?}\n */\nNgbAlert.prototype.dismissible;\n/**\n * Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\" and \"danger\".\n * @type {?}\n */\nNgbAlert.prototype.type;\n/**\n * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n * @type {?}\n */\nNgbAlert.prototype.close;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}