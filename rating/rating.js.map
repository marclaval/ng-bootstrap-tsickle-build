{"version":3,"sources":["../../../src/rating/rating.ts"],"names":[],"mappings":"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","file":"rating.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  ContentChild,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nconst Component: NeverTypeCheckMe = Component;  /* local alias for Closure JSDoc */\nconst ChangeDetectionStrategy: NeverTypeCheckMe = ChangeDetectionStrategy;  /* local alias for Closure JSDoc */\nconst Input: NeverTypeCheckMe = Input;  /* local alias for Closure JSDoc */\nconst Output: NeverTypeCheckMe = Output;  /* local alias for Closure JSDoc */\nconst EventEmitter: NeverTypeCheckMe = EventEmitter;  /* local alias for Closure JSDoc */\nconst OnInit: NeverTypeCheckMe = OnInit;  /* local alias for Closure JSDoc */\nconst TemplateRef: NeverTypeCheckMe = TemplateRef;  /* local alias for Closure JSDoc */\nconst OnChanges: NeverTypeCheckMe = OnChanges;  /* local alias for Closure JSDoc */\nconst SimpleChanges: NeverTypeCheckMe = SimpleChanges;  /* local alias for Closure JSDoc */\nconst ContentChild: NeverTypeCheckMe = ContentChild;  /* local alias for Closure JSDoc */\nconst forwardRef: NeverTypeCheckMe = forwardRef;  /* local alias for Closure JSDoc */\nconst ChangeDetectorRef: NeverTypeCheckMe = ChangeDetectorRef;  /* local alias for Closure JSDoc */\nimport {NgbRatingConfig} from './rating-config';\nconst NgbRatingConfig: NeverTypeCheckMe = NgbRatingConfig;  /* local alias for Closure JSDoc */\nimport {toString, getValueInRange} from '../util/util';\nconst toString: NeverTypeCheckMe = toString;  /* local alias for Closure JSDoc */\nconst getValueInRange: NeverTypeCheckMe = getValueInRange;  /* local alias for Closure JSDoc */\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nconst ControlValueAccessor: NeverTypeCheckMe = ControlValueAccessor;  /* local alias for Closure JSDoc */\nconst NG_VALUE_ACCESSOR: NeverTypeCheckMe = NG_VALUE_ACCESSOR;  /* local alias for Closure JSDoc */\ntype Key = number;\nlet Key: any = {};\n/** @type {number} */\nKey.End = 35;\n/** @type {number} */\nKey.Home = 36;\n/** @type {number} */\nKey.ArrowLeft = 37;\n/** @type {number} */\nKey.ArrowUp = 38;\n/** @type {number} */\nKey.ArrowRight = 39;\n/** @type {number} */\nKey.ArrowDown = 40;\nKey[Key.End] = \"End\";\nKey[Key.Home] = \"Home\";\nKey[Key.ArrowLeft] = \"ArrowLeft\";\nKey[Key.ArrowUp] = \"ArrowUp\";\nKey[Key.ArrowRight] = \"ArrowRight\";\nKey[Key.ArrowDown] = \"ArrowDown\";\n\n/** @record */\nexport function StarTemplateContext() {}\n/**\n * Star fill percentage. An integer value between 0 and 100\n * @type {number}\n */\nStarTemplateContext.prototype.fill;\n\n\n/**\n * Context for the custom star display template\n */\nexport interface StarTemplateContext {\n  /**\n   * Star fill percentage. An integer value between 0 and 100\n   */\n  fill: number;\n}\n\nconst /** @type {?} */ NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n/**\n * Rating directive that will take care of visualising a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'(keydown)': 'handleKeyDown($event)'},\n  template: `\n    <template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</template>\n    <span tabindex=\"0\" (mouseleave)=\"reset()\" role=\"slider\" aria-valuemin=\"0\"\n      [attr.aria-valuemax]=\"max\" [attr.aria-valuenow]=\"rate\" [attr.aria-valuetext]=\"ariaValueText()\">\n      <template ngFor [ngForOf]=\"range\" let-index=\"index\">\n        <span class=\"sr-only\">({{ index < rate ? '*' : ' ' }})</span>\n        <span (mouseenter)=\"enter(index + 1)\" (click)=\"update(index + 1)\" \n        [style.cursor]=\"readonly ? 'default' : 'pointer'\">\n          <template [ngTemplateOutlet]=\"starTemplate || t\" [ngOutletContext]=\"{fill: getFillValue(index)}\"></template>\n        </span>\n      </template>\n    </span>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\nprivate _oldRate: number;\n  range: number[] = [];\n\n  /**\n   * Maximal rating that can be given using this widget.\n   */\n  @Input() max: number;\n\n  /**\n   * Current rating. Can be a decimal value like 3.75\n   */\n  @Input() rate: number;\n\n  /**\n   * A flag indicating if rating can be updated.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * A template to override star display.\n   * Alternatively put a <template> as the only child of <ngb-rating> element\n   */\n  @Input() @ContentChild(TemplateRef) starTemplate: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {!NgbRatingConfig} config\n * @param {!ChangeDetectorRef} _changeDetectorRef\n */\nconstructor(config: NgbRatingConfig,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n/**\n * @return {string}\n */\nariaValueText() { return `${this.rate} out of ${this.max}`; }\n/**\n * @param {number} value\n * @return {void}\n */\nenter(value: number): void {\n    if (!this.readonly) {\n      this.rate = value;\n    }\n    this.hover.emit(value);\n  }\n/**\n * @param {!KeyboardEvent} event\n * @return {void}\n */\nhandleKeyDown(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      event.preventDefault();\n\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n        case Key.Home:\n          this.update(0);\n          break;\n        case Key.End:\n          this.update(this.max);\n          break;\n      }\n    }\n  }\n/**\n * @param {number} index\n * @return {number}\n */\ngetFillValue(index: number): number {\n    const /** @type {number} */ diff = this.rate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return Number.parseInt((diff * 100).toFixed(2));\n    }\n\n    return 0;\n  }\n/**\n * @param {!SimpleChanges} changes\n * @return {void}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n      this._oldRate = this.rate;\n    }\n  }\n/**\n * @return {void}\n */\nngOnInit(): void { this.range = Array.from({length: this.max}, (v, k) => k + 1); }\n/**\n * @param {function(?): ?} fn\n * @return {void}\n */\nregisterOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n/**\n * @param {function(): ?} fn\n * @return {void}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @return {void}\n */\nreset(): void {\n    this.leave.emit(this.rate);\n    this.rate = this._oldRate;\n  }\n/**\n * @param {number} value\n * @param {boolean=} internalChange\n * @return {void}\n */\nupdate(value: number, internalChange = true): void {\n    if (!this.readonly) {\n      const /** @type {number} */ newRate = value ? getValueInRange(value, this.max, 0) : 0;\n      if (this._oldRate !== newRate) {\n        this._oldRate = newRate;\n        this.rate = newRate;\n        this.rateChange.emit(newRate);\n        if (internalChange) {\n          this.onChange(this.rate);\n        }\n      }\n    }\n  }\n/**\n * @param {?} value\n * @return {void}\n */\nwriteValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n}\n\nfunction NgbRating_tsickle_Closure_declarations() {\n/** @type {number} */\nNgbRating.prototype._oldRate;\n/** @type {!Array<number>} */\nNgbRating.prototype.range;\n/**\n * Maximal rating that can be given using this widget.\n * @type {number}\n */\nNgbRating.prototype.max;\n/**\n * Current rating. Can be a decimal value like 3.75\n * @type {number}\n */\nNgbRating.prototype.rate;\n/**\n * A flag indicating if rating can be updated.\n * @type {boolean}\n */\nNgbRating.prototype.readonly;\n/**\n * A template to override star display.\n * Alternatively put a <template> as the only child of <ngb-rating> element\n * @type {!TemplateRef<!StarTemplateContext>}\n */\nNgbRating.prototype.starTemplate;\n/**\n * An event fired when a user is hovering over a given rating.\n * Event's payload equals to the rating being hovered over.\n * @type {!EventEmitter<number>}\n */\nNgbRating.prototype.hover;\n/**\n * An event fired when a user stops hovering over a given rating.\n * Event's payload equals to the rating of the last item being hovered over.\n * @type {!EventEmitter<number>}\n */\nNgbRating.prototype.leave;\n/**\n * An event fired when a user selects a new rating.\n * Event's payload equals to the newly selected rating.\n * @type {!EventEmitter<number>}\n */\nNgbRating.prototype.rateChange;\n/** @type {function(?): void} */\nNgbRating.prototype.onChange;\n/** @type {function(): void} */\nNgbRating.prototype.onTouched;\n/** @type {!ChangeDetectorRef} */\nNgbRating.prototype._changeDetectorRef;\n}\n\n"]}