{"version":3,"sources":["../../../src/util/popup.ts"],"names":[],"mappings":"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","file":"popup.js","sourceRoot":"","sourcesContent":["import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer,\n  ComponentRef,\n  ComponentFactory,\n  ComponentFactoryResolver\n} from '@angular/core';\nconst Injector: NeverTypeCheckMe = Injector;  /* local alias for Closure JSDoc */\nconst TemplateRef: NeverTypeCheckMe = TemplateRef;  /* local alias for Closure JSDoc */\nconst ViewRef: NeverTypeCheckMe = ViewRef;  /* local alias for Closure JSDoc */\nconst ViewContainerRef: NeverTypeCheckMe = ViewContainerRef;  /* local alias for Closure JSDoc */\nconst Renderer: NeverTypeCheckMe = Renderer;  /* local alias for Closure JSDoc */\nconst ComponentRef: NeverTypeCheckMe = ComponentRef;  /* local alias for Closure JSDoc */\nconst ComponentFactory: NeverTypeCheckMe = ComponentFactory;  /* local alias for Closure JSDoc */\nconst ComponentFactoryResolver: NeverTypeCheckMe = ComponentFactoryResolver;  /* local alias for Closure JSDoc */\nexport class ContentRef {\n/**\n * @param {!Array<?>} nodes\n * @param {!ViewRef=} viewRef\n * @param {!ComponentRef<?>=} componentRef\n */\nconstructor(public nodes: any[],\npublic viewRef?: ViewRef,\npublic componentRef?: ComponentRef<any>) {}\n}\n\nfunction ContentRef_tsickle_Closure_declarations() {\n/** @type {!Array<?>} */\nContentRef.prototype.nodes;\n/** @type {!ViewRef} */\nContentRef.prototype.viewRef;\n/** @type {!ComponentRef<?>} */\nContentRef.prototype.componentRef;\n}\n\nexport class PopupService<T> {\nprivate _windowFactory: ComponentFactory<T>;\nprivate _windowRef: ComponentRef<T>;\nprivate _contentRef: ContentRef;\n/**\n * @param {?} type\n * @param {!Injector} _injector\n * @param {!ViewContainerRef} _viewContainerRef\n * @param {!Renderer} _renderer\n * @param {!ComponentFactoryResolver} componentFactoryResolver\n */\nconstructor(\n      type: any,\nprivate _injector: Injector,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _renderer: Renderer,\n      componentFactoryResolver: ComponentFactoryResolver) {\n    this._windowFactory = componentFactoryResolver.resolveComponentFactory<T>(type);\n  }\n/**\n * @param {(string|!TemplateRef<?>)=} content\n * @param {?=} context\n * @return {!ComponentRef<?>}\n */\nopen(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef =\n          this._viewContainerRef.createComponent(this._windowFactory, 0, this._injector, this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n/**\n * @return {void}\n */\nclose() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n        this._contentRef = null;\n      }\n    }\n  }\n/**\n * @param {(string|!TemplateRef<?>)} content\n * @param {?=} context\n * @return {!ContentRef}\n */\nprivate _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const /** @type {!EmbeddedViewRef<?>} */ viewRef = this._viewContainerRef.createEmbeddedView( /** @type {!TemplateRef<?>} */((<TemplateRef<T>>content)), context);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(null, `${content}`)]]);\n    }\n  }\n}\n\nfunction PopupService_tsickle_Closure_declarations() {\n/** @type {!ComponentFactory<?>} */\nPopupService.prototype._windowFactory;\n/** @type {!ComponentRef<?>} */\nPopupService.prototype._windowRef;\n/** @type {!ContentRef} */\nPopupService.prototype._contentRef;\n/** @type {!Injector} */\nPopupService.prototype._injector;\n/** @type {!ViewContainerRef} */\nPopupService.prototype._viewContainerRef;\n/** @type {!Renderer} */\nPopupService.prototype._renderer;\n}\n\n"]}