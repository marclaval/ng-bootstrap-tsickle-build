{"version":3,"sources":["../../../src/popover/popover.ts"],"names":[],"mappings":"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","file":"popover.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Injector,\n  Renderer,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core';\nconst Component: NeverTypeCheckMe = Component;  /* local alias for Closure JSDoc */\nconst Directive: NeverTypeCheckMe = Directive;  /* local alias for Closure JSDoc */\nconst Input: NeverTypeCheckMe = Input;  /* local alias for Closure JSDoc */\nconst Output: NeverTypeCheckMe = Output;  /* local alias for Closure JSDoc */\nconst EventEmitter: NeverTypeCheckMe = EventEmitter;  /* local alias for Closure JSDoc */\nconst ChangeDetectionStrategy: NeverTypeCheckMe = ChangeDetectionStrategy;  /* local alias for Closure JSDoc */\nconst OnInit: NeverTypeCheckMe = OnInit;  /* local alias for Closure JSDoc */\nconst OnDestroy: NeverTypeCheckMe = OnDestroy;  /* local alias for Closure JSDoc */\nconst Injector: NeverTypeCheckMe = Injector;  /* local alias for Closure JSDoc */\nconst Renderer: NeverTypeCheckMe = Renderer;  /* local alias for Closure JSDoc */\nconst ComponentRef: NeverTypeCheckMe = ComponentRef;  /* local alias for Closure JSDoc */\nconst ElementRef: NeverTypeCheckMe = ElementRef;  /* local alias for Closure JSDoc */\nconst TemplateRef: NeverTypeCheckMe = TemplateRef;  /* local alias for Closure JSDoc */\nconst ViewContainerRef: NeverTypeCheckMe = ViewContainerRef;  /* local alias for Closure JSDoc */\nconst ComponentFactoryResolver: NeverTypeCheckMe = ComponentFactoryResolver;  /* local alias for Closure JSDoc */\nconst NgZone: NeverTypeCheckMe = NgZone;  /* local alias for Closure JSDoc */\n\nimport {listenToTriggers} from '../util/triggers';\nconst listenToTriggers: NeverTypeCheckMe = listenToTriggers;  /* local alias for Closure JSDoc */\nimport {positionElements} from '../util/positioning';\nconst positionElements: NeverTypeCheckMe = positionElements;  /* local alias for Closure JSDoc */\nimport {PopupService} from '../util/popup';\nconst PopupService: NeverTypeCheckMe = PopupService;  /* local alias for Closure JSDoc */\nimport {NgbPopoverConfig} from './popover-config';\nconst NgbPopoverConfig: NeverTypeCheckMe = NgbPopoverConfig;  /* local alias for Closure JSDoc */\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'[class]': '\"popover show popover-\" + placement', 'role': 'tooltip'},\n  template: `\n    <h3 class=\"popover-title\">{{title}}</h3><div class=\"popover-content\"><ng-content></ng-content></div>\n    `\n})\nexport class NgbPopoverWindow {\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' = 'top';\n  @Input() title: string;\n}\n\nfunction NgbPopoverWindow_tsickle_Closure_declarations() {\n/** @type {string} */\nNgbPopoverWindow.prototype.placement;\n/** @type {string} */\nNgbPopoverWindow.prototype.title;\n}\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy {\n  /**\n   * Content to be displayed as popover.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n  /**\n   * Title of a popover.\n   */\n  @Input() popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() hidden = new EventEmitter();\nprivate _popupService: PopupService<NgbPopoverWindow>;\nprivate _windowRef: ComponentRef<NgbPopoverWindow>;\nprivate _unregisterListenersFn;\nprivate _zoneSubscription: any;\n/**\n * @param {!ElementRef} _elementRef\n * @param {!Renderer} _renderer\n * @param {!Injector} injector\n * @param {!ComponentFactoryResolver} componentFactoryResolver\n * @param {!ViewContainerRef} viewContainerRef\n * @param {!NgbPopoverConfig} config\n * @param {!NgZone} ngZone\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      ngZone: NgZone) {\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n/**\n * Opens an element’s popover. This is considered a “manual” triggering of the popover.\n * The context is an optional value to be injected into the popover template when it is created.\n * @param {?=} context\n * @return {void}\n */\nopen(context?: any) {\n    if (!this._windowRef) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.placement = this.placement;\n      this._windowRef.instance.title = this.popoverTitle;\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // we need to manually invoke change detection since events registered via\n      // Renderer::listen() are not picked up by change detection with the OnPush strategy\n      this._windowRef.changeDetectorRef.markForCheck();\n      this.shown.emit();\n    }\n  }\n/**\n * Closes an element’s popover. This is considered a “manual” triggering of the popover.\n * @return {void}\n */\nclose(): void {\n    if (this._windowRef) {\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n/**\n * Toggles an element’s popover. This is considered a “manual” triggering of the popover.\n * @return {void}\n */\ntoggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n/**\n * Returns whether or not the popover is currently being shown\n * @return {boolean}\n */\nisOpen(): boolean { return this._windowRef != null; }\n/**\n * @return {void}\n */\nngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n/**\n * @return {void}\n */\nngOnDestroy() {\n    this.close();\n    this._unregisterListenersFn();\n    this._zoneSubscription.unsubscribe();\n  }\n}\n\nfunction NgbPopover_tsickle_Closure_declarations() {\n/**\n * Content to be displayed as popover.\n * @type {(string|!TemplateRef<?>)}\n */\nNgbPopover.prototype.ngbPopover;\n/**\n * Title of a popover.\n * @type {string}\n */\nNgbPopover.prototype.popoverTitle;\n/**\n * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n * @type {string}\n */\nNgbPopover.prototype.placement;\n/**\n * Specifies events that should trigger. Supports a space separated list of event names.\n * @type {string}\n */\nNgbPopover.prototype.triggers;\n/**\n * A selector specifying the element the popover should be appended to.\n * Currently only supports \"body\".\n * @type {string}\n */\nNgbPopover.prototype.container;\n/**\n * Emits an event when the popover is shown\n * @type {!EventEmitter<?>}\n */\nNgbPopover.prototype.shown;\n/**\n * Emits an event when the popover is hidden\n * @type {!EventEmitter<?>}\n */\nNgbPopover.prototype.hidden;\n/** @type {!PopupService<!NgbPopoverWindow>} */\nNgbPopover.prototype._popupService;\n/** @type {!ComponentRef<!NgbPopoverWindow>} */\nNgbPopover.prototype._windowRef;\n/** @type {?} */\nNgbPopover.prototype._unregisterListenersFn;\n/** @type {?} */\nNgbPopover.prototype._zoneSubscription;\n/** @type {!ElementRef} */\nNgbPopover.prototype._elementRef;\n/** @type {!Renderer} */\nNgbPopover.prototype._renderer;\n}\n\n"]}